// pages/track.jsx
import { useState } from "react";
import axios from "axios";

export default function TrackOrder() {
  const [trackingNumber, setTrackingNumber] = useState("");
  const [status, setStatus] = useState(null);
  const [error, setError] = useState(null);
  const [loading, setLoading] = useState(false);

  const fetchTrackingStatus = async () => {
    setError(null);
    setStatus(null);

    if (!trackingNumber.trim()) {
      setError("ุฑุฌุงุกู ุฃุฏุฎูู ุฑูู ุงูุชุชุจุน");
      return;
    }

    setLoading(true);

    try {
      // ูุซุงู ุทูุจ API ูููู - ุจูุฌูุจ ุจูุงูุงุช ูุณุชุฎุฏู ููุซุงู
      const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${trackingNumber}`);

      // ูู ุงูุฑูู ููุฌูุฏุ ููุชุฑุถ ุฃูู ููุซู ุงูุดุญูุฉ
      if (res.data && res.data.id) {
        // ูุนุฑุถ ุงูุญุงูุฉ ุจูุงุกู ุนูู ุฑูู ุงูุชุชุจุน (ูุซุงู ููุท)
        const statuses = [
          "ุชู ุงุณุชูุงู ุงูุดุญูุฉ ูู ุงููุณุชูุฏุน",
          "ุงูุดุญูุฉ ููุฏ ุงูุชุฌููุฒ",
          "ุงูุดุญูุฉ ูู ุงูุทุฑูู ุฅููู",
          "ุชู ุชุณููู ุงูุดุญูุฉ ุจูุฌุงุญ",
        ];

        // ุญุงูุฉ ุนุดูุงุฆูุฉ ุญุณุจ ุงูุฑูู (ุชุจุฏูู)
        const statusIndex = res.data.id % statuses.length;
        setStatus(statuses[statusIndex]);
      } else {
        setError("ุฑูู ุงูุชุชุจุน ุบูุฑ ุตุญูุญ ุฃู ุบูุฑ ููุฌูุฏ.");
      }
    } catch (err) {
      setError("ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุฌูุจ ุจูุงูุงุช ุงูุดุญูุฉ. ุชุฃูุฏู ูู ุฑูู ุงูุชุชุจุน ูุญุงููู ูุฑุฉ ุฃุฎุฑู.");
    }

    setLoading(false);
  };

  return (
    <div style={{ padding: "20px", fontFamily: "Arial" }}>
      <h1>ุชุชุจุน ุงูุดุญูุฉ ๐ฆ</h1>
      <input
        type="text"
        placeholder="ุฃุฏุฎูู ุฑูู ุงูุชุชุจุน (ุฑูู ูู 1 ุฅูู 10)"
        value={trackingNumber}
        onChange={(e) => setTrackingNumber(e.target.value)}
        style={{ padding: "10px", fontSize: "16px", width: "250px" }}
      />
      <button
        onClick={fetchTrackingStatus}
        style={{
          marginLeft: "10px",
          padding: "10px 20px",
          fontSize: "16px",
          cursor: "pointer",
        }}
        disabled={loading}
      >
        {loading ? "ุฌุงุฑู ุงูุชุชุจุน..." : "ุชุชุจุน"}
      </button>

      {status && (
        <p style={{ marginTop: "20px", fontWeight: "bold", color: "green" }}>
          ุญุงูุฉ ุงูุดุญูุฉ: {status}
        </p>
      )}
      {error && (
        <p style={{ marginTop: "20px", fontWeight: "bold", color: "red" }}>
          {error}
        </p>
      )}
    </div>
  );
}